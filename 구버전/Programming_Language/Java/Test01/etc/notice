	# 자바 기본 문법

	1. 파일이름.java -> javac 파일이름.java -> 파일이름.class

	2. 자바의 실행 단위는 class이다.

	3. 자바의 접근제한자.
		public - protected(상속시) - private - default (같은 패키지 안에서 공개)
	
	4. 클래스명, 메서드명, 벰버 변수 앞에서 선언된다. (접근제한자)

	5. static, abstract 등도 접근제한자와 함께 선언된다.

	6. 기본자료형(byte, short, int, long, float, double, char, boolean)  / 참조형(배열, 클래스)
	
	// 기본 자료형 -> 제어문 -> 배열 -> 메서드 및 클래스 -> 상속 -> 추상화 -> 다형성

	ex) System.out.println("Ex01's method");
	
	public class PrintStream {
		public void println(String str){
			~~~
		}
	}
	== PrintStream System.out = new PrintStream();
		 System.out.println();

	자바는 한 글자에 대해서는 ' '를 사용하고 문자열 String은 " "을 사용한다.
	java.lang은 따로 임포트 안해도 가져다가 사용할 수 있다.
	
	final이 class앞에 있으면 상속을 하지 않겠다는 의미고,
	변수 앞에 final이 있으면 그 갚을 const.로 바꿔준다.
	ex) Math.PI
	
	static이 붙어있으면 전역으로 쓸 수 있다, 지역은 final만 줄수 있다(?)
	
=> public static final PrintStream out (이부분은 암기하자)
	final => 클래스 앞, 메서드 앞, 변수 앞 선언 가능
	클래스 앞 : 상속을 하지 않겠다.
	메서드 앞 : 재정의를 하지 않겠다.
	변수 앞 : 변수를 상수로 만들겠다.
	자바에서는 상수는 constant가 아닌 FIELD라고 부른다. field는 static붙는다.
	
	
	추상클래스 - 추상메서드
	
	오버로드
	클래스 메서드 이름은 동일하나 메서드 괄호 안 매개인자 개수가 다르거나 타입을 다르게 주는 것
	
	*오버로딩(Overloading)
	같은 이름의 메서드 여러개를 가지면서 매개변수의 유형과 개수가 다르도록 하는 기술
	
	*오버라이딩(Overriding)
	상위 클래스가 가지고 있는 메서드를 하위 클래스가 재정의해서 사용
	
	상위 클래스가 가지고 있는 멤버변수가 하위 클래스로 상속되는 것처럼 상위 클래스가 가지고 있는 메서드도 
	하위 클래스로 상속되어 하위 클래스에 사용할 수 있습니다. 또한, 하위 클래스에서 메서드를 재정의해서도 사용할 수 있습니다.
	쉽게 말해 메서드의 이름이 서로 같고, 매개변수가 같고, 반환형이 같을 경우에 상속받은 메서드를 덮어쓴다고 
	생각하시면 됩니다. ' 부모클래스의 메서드는 무시하고, 자식 클래스의 메서드 기능을 사용하겠다'와 같습니다.
	
	
	PrintStream에서 printf(String format, Object ... args)
	
	래퍼 클래스
	http://tcpschool.com/java/java_api_wrapper
	
	
	printf
	string format  : %[argument_index$][flags][width]conversion
	
	가비지콜렉터?
	
	

	
	
	
	
	
	
	
	
	
	
	
	
	
