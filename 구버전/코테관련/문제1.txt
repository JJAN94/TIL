def solution(s):
  # 받은 문자열 맨 뒤에 빈공간을 추가해준다.
  s += ' '

  # 정답을 담을 빈 문자열 생성
  answer = ''
  string = ''
  if src[0] == '0':
    string = '0'
  elif src[0] == '1':
    string = '1'

  cnt = 1
  for i in range(1, len(s)):
    if s[i-1] == s[i]:
      cnt += 1   
    else :
      answer += str(cnt)
      cnt=1
  
  # 알파벳으로 변환
  for i in range(len(answer)):
    string += chr(ord(answer[i])+16)
  print(string)
  return string



# src = '111100100011'
src = '11111'
# src = '00011011100000'
# sol = '1DBACB'
# sol = '0CBACE'
solution(src)



# 학생 총수 n
# 학생 번호 1~n까지
# 스터디 그룹 t1, t2배열
# 각 배열의 인덱스는 서로 같은 스터디 그룹
# t1, t2는 길이가 같다. 4~50,000

n = 10
t1 = [9, 4, 4, 4, 7]
t2 = [2, 10, 7, 6, 3]
# t1 = [6,3,4,9,2,7,5]
# t2 = [4,2,8,2,1,10,3]

# answer = [1,2,5,6,8]

def solution(n, t1, t2):
  # 혼자 그룹을 짜는 조
  solo = list(set(list(range(1, n+1))).difference(set(t1+t2)))
  print(solo)

  ls = [[t1[i], t2[i]] for i in range(len(t1))]
  print(ls)
  new_ls = []
  for i in range(len(ls)-1):
    for j in range(i+1, len(ls)):
      if set(ls[j]).intersection(set(ls[i])):
        new_ls.append(list(set(ls[j].union(set(ls[i])))))
  print(new_ls)

