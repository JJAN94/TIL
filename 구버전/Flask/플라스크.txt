flask01_hello.py
```
Flask 웹 서비스 만드는 순서
1. flask 모듈 import
2. app라는 이름으로 Flask 객체 생성
3. app라는 변수에 웹 서비스 기능을 추가
	- @app.route() 
	# 라우트란? 클라이언트의 요청을 route로 받는다.
	# Flask 서버에서 여러가지 url로 이동하기 위한 일종의 문법
4. app을 run 시킨다. 이때 host, port를 지정한다. 

http://www.daum.net --> 80port가 돈다.
https://www.daum.net --> 443port가 돈다.


```

# flask 라이브러리에서 Flask 함수를 로딩한다.
# flask 라이브러리는 서버의 핵심적인 기능을 가지고 있는 모듈... Flask
from flask import Flask

# Flask 객체를 생성, 변수에 할당
app = Flask(__name__)

print(__name__) # 해당 파일이 직접 호출 대상이라면 __main__이 출력된다.
print(app)

# 클라이언트에서 들어오는 요청을 받아들일수 있어야 한다.
# app을 이용해서 라우팅 시킨다.

@app.route('/index')
@app.route('/') # http://127.0.0.1:7777/
def index():
	return "<h1>INDEX PAGE</h1>"

# FLASK 서버를 가동시킨다.
if __name__ == "__main__":
	app.run(host="0.0.0.0", port="7788")


------------------------------------------------------------------------------------------------------
flask02_route.py

from flask import Flask

app = Flask(__name__)

@app.route('/')
def index():
	return "<h1>index...</h1>"

@app.route('/hello')
def flask_hello():
	return "<h3>Hello Flask...!!</h3>

if __name__ == "__main__":
	app.run(host="127.0.0.1", port="7788")


------------------------------------------------------------------------------------------------------
flask03_route.py
# 라우팅 심화... Vue의 Axios 기술과 연결...
# 클라이언트 비동기 요청시 변수로 값 전달

from flask import Flask

app = Flask(__name__)

@app.route('/')
def index():
	return "<h2>Index page...</h2>"

# http://127.0.0.1:7788/emps.hahash
@app.route('/emps/<empid>')
def get_employee():
	return '<h3>Employee ID :: '+empid+'</h3>'
# hahash가 empid로 들어감

def annualSalary(amount):
	return amount * 12 + 12000
	
# url에 실수형을 변수로 전달할때는? float:sal %f
@app.route('/emps/<int:sal>')
def get_salary(sal):
	totalSalary = annualSalary(sal)
	return "<h3>%d</h3>" % (totalSalary)


if __name__ == "__main__":
	app.run(host="127.0.0.1", port='7788')


























